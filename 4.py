# проверьте получившееся число, вычислив ковариацию еще одним способом - с помощью функции np.cov. В качестве аргумента m
# функция np.cov должна принимать транспонированный массив “a”. В получившейся ковариационной матрице (массив Numpy размером 2x2)
# искомое значение ковариации будет равно элементу в строке с индексом 0 и столбце с индексом 1.

import numpy as np

N = 5 # число наблюдений

a = np.array([[1,6],[2,8],[3,11],[3,10],[1,7]])
print(a)

mean_a = a.mean(axis=0)
print(mean_a)

a_centered = np.array([(a[:,0] - mean_a[0]),(a[:,1] - mean_a[1])]).transpose()
print(a_centered)

a_centered_sp = np.dot(a_centered[:,0], a_centered[:,1])
print(f'ковариация двух признаков массива а - {a_centered_sp / (N - 1)}')

c = np.cov(a.transpose())

print(f'ковариация через dot = {a_centered_sp/(N-1)} и ковариация через cov = {c[0,1]}')
